import logging

from learn_to_pack.geometry.pltfunc import PltFunc

logging.basicConfig(level=logging.INFO, format="%(asctime)s %(filename)s-line%(lineno)d:%(levelname)s:%(message)s",
                    datefmt="%d-%M-%Y %H:%M:%S")


class NFPArc(object):
    '''
    基于Arc的NFP计算
    参考文献：Irregular Packing Using the Line and Arc No-Fit Polygon(Burke et al. 2010)
    '''

    def __init__(self):
        pass


class NFPMinkowski(object):
    '''
    采用Minkowski Sum计算No fit polygon
    参考文献：The irregular cutting-stock problem a new procedure for deriving the no-fit polygon
    '''

    def __init__(self):
        pass


def polygonFuncCheck():
    polygons = [[[525.0867175941048, 1460.9905830608504], [582.2017614687206, 1767.4083603084414],
                 [377.1811708941839, 1756.4329089645125], [18.668940346513637, 1718.1056269354658],
                 [125.08671759410481, 1460.9905830608504], [43.178931358332306, 1358.3845400631499],
                 [175.0867175941048, 1201.1829619255186], [525.0867175941046, 1114.5804215470746],
                 [584.8943387294362, 1310.99058306085]],
                [[882.6133890786109, 486.2860886342353], [566.730028708906, 507.71817542357644],
                 [348.67234627062, 673.1201401481796], [327.2402594812786, 357.2367797784748],
                 [342.03206833715944, 225.9558451637006], [522.2258419176433, 112.732592987212],
                 [771.6217626611365, 0.0]],
                [[667.3308799144743, 1991.986091838081], [840.5359606713623, 2291.986091838081],
                 [407.52325877914285, 2341.986091838081]],
                [[568.0825141100973, 921.3885247870273], [572.6421395707833, 1091.7668857250185],
                 [404.64688704185494, 1063.006301794928], [333.48946790521234, 1161.9884459830212],
                 [39.682506254725354, 1081.2983404009804], [178.2196310110113, 893.5049810733983],
                 [207.93321282096156, 756.9138499276219], [268.05575589607827, 696.7913068525052],
                 [376.18391938719776, 665.0420134187414], [484.31208287831726, 696.7913068525049],
                 [712.6853325196702, 648.7856864365024]],
                [[1257.6976336467092, 1332.7108050946526], [1099.1256911845553, 1463.1287569092483],
                 [964.6473071381935, 1666.8706587222596], [861.1196890971851, 1680.5003282066323],
                 [617.615117493697, 1597.8416643231267], [667.9345238393714, 1332.2641372271364],
                 [563.6862306850419, 1241.342470540617], [578.2769766225659, 997.6576157320133],
                 [711.1196890971848, 1020.6927070713009], [861.1196890971848, 880.5003282066323],
                 [1011.1196890971847, 1020.6927070713004], [1207.5298506109602, 1080.5003282066318]],
                [[1500.0, 613.9330217804386], [1250.0, 873.74064291577], [1100.0, 913.9330217804386],
                 [793.5822227524088, 871.0480656550544], [700.0, 613.9330217804386],
                 [818.0922137642275, 511.326978782738], [999.9999999999999, 440.7279410235508],
                 [1152.0944533000788, 318.49069587677604], [1381.9077862357726, 511.32697878273757]],
                [[1500.0, 1955.8480328821652], [1296.458220183585, 2182.5729051884427],
                 [1156.925935309314, 2351.7766096345385], [933.8339947992454, 2319.7008310239726],
                 [797.7001702582966, 2217.7923264602796], [899.9999999999998, 1955.8480328821652],
                 [918.0736009290961, 1872.7650302817883], [937.8077547633206, 1703.471973032811],
                 [1043.0740646906856, 1559.9194561297923], [1361.9442935781137, 1653.5482031404617],
                 [1483.7971894457992, 1843.1550101455932]],
                [[513.8181010090098, 2106.632917588077], [441.1638482084736, 2206.6329175880765],
                 [416.3118960624631, 2330.146473601633], [230.9016994374947, 2330.1464736016333],
                 [0.0, 2279.9436196300762], [38.28984286143282, 1952.124420400603],
                 [111.47476339401464, 1832.697484357123], [276.6764582379096, 1748.5230165345458],
                 [416.3118960624631, 1759.512563824541], [485.4101966249682, 1927.2724682545925]],
                [[1206.4850509928829, 251.76380902050414], [840.0948049781816, 300.00000000000045],
                 [820.1147204772557, 148.23619097949586], [1359.7100472488446, 0.0]]]
    for poly in polygons:
        PltFunc.addPolygon(poly)
    PltFunc.showPlt(width=2500, height=2500)


if __name__ == '__main__':
    # polygonFuncCheck()
    # PltFunc.addPolygonColor(((0, 580), (480, 580), (480, 200), (0, 200), (0, 580)))
    # PltFunc.addPolygon(((248.47, 860), (448.47, 940), (648.47, 940), (648.47, 560), (248.47, 560)))

    # PltFunc.addPolygon(((604.326, 180), (200, 180), (200, 760), (604.326, 760), (604.326, 180)))
    # PltFunc.addPolygonColor([[234.286,560],[360,560],[380,560],[380,723.959],[380,723.959],[380,460],[234.286,460],[234.286,560]])
    # PltFunc.addPolygon([[-80,580,],[200,580,],[200,400,],[-80,400,]])
    # PltFunc.addPolygon(((480, 200), (480, 380), (200, 380), (200, 760), (1e+08, 760), (1e+08, 200), (480, 200)))
    PltFunc.showPlt()
